package com.edu.thss.smartdental.adapter;

import com.edu.thss.smartdental.R;
import com.edu.thss.smartdental.ScheduleDetailFragment;
import com.edu.thss.smartdental.ScheduleFragment;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentManager;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.View.OnTouchListener;

import android.widget.ImageView;
import android.widget.TextView;
import android.view.MotionEvent;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

import com.edu.thss.smartdental.db.ScheduleManager;
import com.edu.thss.smartdental.model.ScheduleElement;
import com.nhaarman.listviewanimations.ArrayAdapter;
import com.nhaarman.listviewanimations.itemmanipulation.ExpandableListItemAdapter;

public class ScheduleListAdapter extends ExpandableListItemAdapter<ScheduleElement> {
	
	private final Context mContext;

	public ScheduleListAdapter(final Context context,
			final ArrayList<ScheduleElement> items) {
		super(context, R.layout.item_expandablelistitem_card, R.id.activity_expandablelistitem_card_title, R.id.activity_expandablelistitem_card_content, items);
		mContext = context;
	}
	
	@Override
    public View getTitleView(final int position, final View convertView, final ViewGroup parent) {
        TextView tv = (TextView) convertView;
        if (tv == null) {
            tv = new TextView(mContext);
        }
        tv.setText("卡片"+position);
        return tv;
    }
	
	@Override
    public View getContentView(final int position, final View convertView, final ViewGroup parent) {
        ImageView imageView = (ImageView) convertView;
        if (imageView == null) {
            imageView = new ImageView(mContext);
            imageView.setScaleType(ImageView.ScaleType.CENTER_CROP);
        }

        int imageResId;
        switch (getItem(position) % 5) {
            case 0:
                imageResId = R.drawable.img_nature1;
                break;
            case 1:
                imageResId = R.drawable.img_nature2;
                break;
            case 2:
                imageResId = R.drawable.img_nature3;
                break;
            case 3:
                imageResId = R.drawable.img_nature4;
                break;
            default:
                imageResId = R.drawable.img_nature5;
        }

        Bitmap bitmap = getBitmapFromMemCache(imageResId);
        if (bitmap == null) {
            bitmap = BitmapFactory.decodeResource(mContext.getResources(), imageResId);
            addBitmapToMemoryCache(imageResId, bitmap);
        }
        imageView.setImageBitmap(bitmap);

        return imageView;
    }
	
	private String getLen2(String s){
		while(s.length() < 2){
			s = '0' + s;
		}
		return s;
	}

    @Override
    public long getItemId(int arg0) {
        // TODO Auto-generated method stub
        return getItem(arg0).hashCode();
    }

    @Override
    public View getView(int arg0, View arg1, ViewGroup arg2) {

        if(arg1==null)
        {
            arg1 = LayoutInflater.from(mContext).inflate(R.layout.schedule_item, arg2,false);
        }
        
        TextView hour = (TextView)arg1.findViewById(R.id.hour);
        TextView min = (TextView)arg1.findViewById(R.id.min);
        TextView name = (TextView)arg1.findViewById(R.id.name);
        TextView fromUser = (TextView)arg1.findViewById(R.id.fromUser);
        
        final ScheduleElement temp = getItem(arg0);
        
        Date d = temp.alertTime;
        Calendar c = Calendar.getInstance(); 
        c.setTime(d);
        
        hour.setText(getLen2(Integer.toString(c.get(Calendar.HOUR_OF_DAY))));
        min.setText(':' + getLen2(Integer.toString(c.get(Calendar.MINUTE))));
        name.setText(temp.name);
        fromUser.setText(temp.fromUser);
//        final String ttt = hour.getText().toString() +min.getText().toString();
//        final ImageView edit = (ImageView)arg1.findViewById(R.id.schedule_edit);
//        ImageView cancel = (ImageView)arg1.findViewById(R.id.schedule_cancel);
//        
//        edit.setOnTouchListener(new OnTouchListener() {
//            @Override
//            public boolean onTouch(View arg0, MotionEvent arg1) {
//                switch (arg1.getAction()) {
//                case MotionEvent.ACTION_DOWN: {
//                    edit.setAlpha(1.0f);
//                    break;
//                }
//                case MotionEvent.ACTION_UP:{
//                	edit.setAlpha(0.8f);
//                	Fragment fragment  = new ScheduleDetailFragment();
//                	Calendar cal = Calendar.getInstance();
//			        cal.setTime(date);
//			        int year = cal.get(Calendar.YEAR);
//			        int month = cal.get(Calendar.MONTH);
//			        int day = cal.get(Calendar.DAY_OF_MONTH);
//                	Bundle bundle = new Bundle();
//                    bundle.putString("id", String.valueOf(temp.id));
//                    bundle.putString("action", "edit");
//                    bundle.putString("name", temp.name);
//                    bundle.putString("time", ttt);
//                    bundle.putString("description", temp.description);
//			        bundle.putString("year", String.valueOf(year));
//			        bundle.putString("month", String.valueOf(month));
//			        bundle.putString("day", String.valueOf(day));
//                    fragment.setArguments(bundle);
//
//        			if(fragment != null){
//        				FragmentManager fragmentManager = fa.getSupportFragmentManager();
//        				fragmentManager
//        				.beginTransaction()
//        				.replace(R.id.test_activity,fragment,"newFragment2")
//        				.addToBackStack(null)
//        				.commit();
//        			}
//                    break;
//                }
//                }
//                return true;
//            }
//        });
//        
//        cancel.setOnTouchListener(new OnTouchListener() {
//            @Override
//            public boolean onTouch(View arg0, MotionEvent arg1) {
//                switch (arg1.getAction()) {
//                case MotionEvent.ACTION_DOWN: {
//                    edit.setAlpha(1.0f);
//                    break;
//                }
//                case MotionEvent.ACTION_UP:{
//                	edit.setAlpha(0.8f);
//                	ScheduleManager sm = new ScheduleManager(fa);
//                	Fragment fragment  = new ScheduleFragment();
//                	sm.deleteSchedule(temp.id);
//                	Bundle bundle = new Bundle();
//                	Calendar cal = Calendar.getInstance();
//			        cal.setTime(date);
//			        int year = cal.get(Calendar.YEAR);
//			        int month = cal.get(Calendar.MONTH);
//			        int day = cal.get(Calendar.DAY_OF_MONTH);
//			        bundle.putString("year", String.valueOf(year));
//			        bundle.putString("month", String.valueOf(month));
//			        bundle.putString("day", String.valueOf(day));
//			        fragment.setArguments(bundle);
//        			if(fragment != null){
//        				FragmentManager fragmentManager = fa.getSupportFragmentManager();
//        				fragmentManager
//        				.beginTransaction()
//        				.replace(R.id.test_activity,fragment)
//        				.commit();
//        			}
//        			
//                    break;
//                }
//                }
//                return true;
//            }
//        });
//        
        
        return arg1;
    }
    
    @Override
    public boolean hasStableIds() {
      return true;
    }

}
